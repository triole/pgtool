#!/bin/bash
scriptdir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
dump_dir="${scriptdir}/dump"
mkdir -p "${dump_dir}"

cmd="${1}"
conf="${2}"
dump="${3}"

debug="false"
verbose="false"
for val in "$@"; do
    if [[ "${val}" =~ ^-+(d|debug)$ ]]; then
        debug="true"
    fi
    if [[ "${val}" =~ ^-+(v|verbose)$ ]]; then
        verbose="true"
    fi
done

function rcmd() {
    if [[ ("${debug}" != "false" || "${verbose}" == "true") ]]; then
        echo -e "\n\033[0;93m${1}\033[0m"
    fi
    if [[ "${debug}" == "false" ]]; then
        eval "${1}"
    fi
}

function display_help() {
    cat "${scriptdir}/doc/help.txt"
    echo ""
    exit 1
}
if [[ -z "${conf}" ]]; then
    display_help
fi

function gk() {
    cat "${conf}" |
        grep -E "^${1}" | grep -Po "[^=]+$" | grep -Po "(?<=\").*(?=\")" |
        envsubst
}

function add_arg() {
    arg="$(gk "${2}")"
    if [[ -n "${arg}" ]]; then
        pg_args+=" ${1} ${arg}"
    fi
}

pg_pass="$(gk "pg_pass")"
if [[ -n "${pg_pass}" ]]; then
    export PGPASSWORD="${pg_pass}"
    pg_args+="-w"
fi

pg_args=""
add_arg "-h" "pg_host"
add_arg "-p" "pg_port"
add_arg "-U" "pg_user"
add_arg "" "pg_db"
run_inside_docker=$(gk "run_inside_docker")

docker_cmd=""
if [[ -n "${run_inside_docker}" ]]; then
    docker_cmd="docker exec -it ${run_inside_docker} "
fi

# pg functions
function pull() {
    target_file="${dump_dir}/$(date +%Y%m%d_%H%M%S).sql.gz"
    rcmd "mkdir -p \"${dump_dir}\""
    rcmd "${docker_cmd}pg_dump ${pg_args} | gzip >\"${target_file}\""
}

function push() {
    rcmd "${docker_cmd}createdb ${pg_args}" &&
        rcmd "zcat \"${dump}\" | psql ${pg_args}"
}

function drop() {
    if [[ "${debug}" == "false" ]]; then
        echo ""
        printf "You're about to overwrite your current database. "
        read -p "Sure to continue? y/n   " inp
        if [[ "${inp}" != "y" ]]; then
            echo -e "Abort.\n"
            exit
        fi
    fi
    rcmd "${docker_cmd}dropdb ${pg_args}"
}

function list() {
    rcmd "${docker_cmd}psql ${pg_args} -l -t"
}

# main
case "${cmd}" in
pull) pull ;;
push) push ;;
drop) drop ;;
list) list ;;
*) display_help ;;
esac
